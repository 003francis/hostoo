<?php

namespace Proxies\__CG__\hostoo\SanteBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Rdv extends \hostoo\SanteBundle\Entity\Rdv implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'id', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'daterdv', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'heureDebut', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'heureFin', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'nbrepatients', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'disponibilite', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'patientsrecus', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'medecin', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'RDVspatients'];
        }

        return ['__isInitialized__', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'id', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'daterdv', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'heureDebut', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'heureFin', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'nbrepatients', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'disponibilite', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'patientsrecus', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'medecin', '' . "\0" . 'hostoo\\SanteBundle\\Entity\\Rdv' . "\0" . 'RDVspatients'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Rdv $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDaterdv($daterdv)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDaterdv', [$daterdv]);

        return parent::setDaterdv($daterdv);
    }

    /**
     * {@inheritDoc}
     */
    public function getDaterdv()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDaterdv', []);

        return parent::getDaterdv();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeureDebut($heureDebut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeureDebut', [$heureDebut]);

        return parent::setHeureDebut($heureDebut);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeureDebut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeureDebut', []);

        return parent::getHeureDebut();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeureFin($heureFin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeureFin', [$heureFin]);

        return parent::setHeureFin($heureFin);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeureFin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeureFin', []);

        return parent::getHeureFin();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbrepatients($nbrepatients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbrepatients', [$nbrepatients]);

        return parent::setNbrepatients($nbrepatients);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbrepatients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbrepatients', []);

        return parent::getNbrepatients();
    }

    /**
     * {@inheritDoc}
     */
    public function setPatientsrecus($patientsrecus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPatientsrecus', [$patientsrecus]);

        return parent::setPatientsrecus($patientsrecus);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatientsrecus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatientsrecus', []);

        return parent::getPatientsrecus();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedecin(\hostoo\UserBundle\Entity\Utilisateur $medecin = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedecin', [$medecin]);

        return parent::setMedecin($medecin);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedecin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedecin', []);

        return parent::getMedecin();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisponibilite($disponibilite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisponibilite', [$disponibilite]);

        return parent::setDisponibilite($disponibilite);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisponibilite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisponibilite', []);

        return parent::getDisponibilite();
    }

    /**
     * {@inheritDoc}
     */
    public function addRDVspatient(\hostoo\SanteBundle\Entity\RdvPatient $rDVspatients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRDVspatient', [$rDVspatients]);

        return parent::addRDVspatient($rDVspatients);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRDVspatient(\hostoo\SanteBundle\Entity\RdvPatient $rDVspatients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRDVspatient', [$rDVspatients]);

        return parent::removeRDVspatient($rDVspatients);
    }

    /**
     * {@inheritDoc}
     */
    public function getRDVspatients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRDVspatients', []);

        return parent::getRDVspatients();
    }

    /**
     * {@inheritDoc}
     */
    public function checkRDV(\hostoo\SanteBundle\Entity\RdvPatient $patrdv)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkRDV', [$patrdv]);

        return parent::checkRDV($patrdv);
    }

}
