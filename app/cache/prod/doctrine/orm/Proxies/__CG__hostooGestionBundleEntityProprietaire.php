<?php

namespace Proxies\__CG__\hostoo\GestionBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Proprietaire extends \hostoo\GestionBundle\Entity\Proprietaire implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'id', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'nom', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'adresse', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'telephone', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'email', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'etat', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'convention', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'patients', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'forpro'];
        }

        return ['__isInitialized__', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'id', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'nom', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'adresse', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'telephone', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'email', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'etat', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'convention', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'patients', '' . "\0" . 'hostoo\\GestionBundle\\Entity\\Proprietaire' . "\0" . 'forpro'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Proprietaire $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresse($adresse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresse', [$adresse]);

        return parent::setAdresse($adresse);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresse', []);

        return parent::getAdresse();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone($telephone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', [$telephone]);

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', []);

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function addPatient(\hostoo\SanteBundle\Entity\Patient $patients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPatient', [$patients]);

        return parent::addPatient($patients);
    }

    /**
     * {@inheritDoc}
     */
    public function removePatient(\hostoo\SanteBundle\Entity\Patient $patients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePatient', [$patients]);

        return parent::removePatient($patients);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatients', []);

        return parent::getPatients();
    }

    /**
     * {@inheritDoc}
     */
    public function addConvention(\hostoo\GestionBundle\Entity\Convention $convention)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConvention', [$convention]);

        return parent::addConvention($convention);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConvention(\hostoo\GestionBundle\Entity\Convention $convention)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConvention', [$convention]);

        return parent::removeConvention($convention);
    }

    /**
     * {@inheritDoc}
     */
    public function getConvention()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConvention', []);

        return parent::getConvention();
    }

    /**
     * {@inheritDoc}
     */
    public function setConvention(\hostoo\GestionBundle\Entity\Convention $convention)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConvention', [$convention]);

        return parent::setConvention($convention);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function addForpro(\hostoo\GestionBundle\Entity\FormuleTarificationProprietaire $forpro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addForpro', [$forpro]);

        return parent::addForpro($forpro);
    }

    /**
     * {@inheritDoc}
     */
    public function removeForpro(\hostoo\GestionBundle\Entity\FormuleTarificationProprietaire $forpro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeForpro', [$forpro]);

        return parent::removeForpro($forpro);
    }

    /**
     * {@inheritDoc}
     */
    public function getForpro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForpro', []);

        return parent::getForpro();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat($etat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

}
