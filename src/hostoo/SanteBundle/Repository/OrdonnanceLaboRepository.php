<?php

namespace hostoo\SanteBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * OrdonnanceLaboRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OrdonnanceLaboRepository extends EntityRepository
{
    public function examensDemandesMois()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('COUNT(a) as total')
            ->where('a.dateordo LIKE :datec')
            ->setParameter('datec',date('Y-m').'%');

        return $qb->getQuery()->getSingleResult();
    }

    public function examensDemandesMoisL()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('a')
            ->join('a.actes','ex')
            ->where('a.dateordo LIKE :datec')
            ->setParameter('datec',date('Y-m').'%');

        return $qb->getQuery()->getResult();
    }

    public function examensDuJour()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->where('a.dateordo LIKE :datec')
            ->setParameter('datec',date('Y-m-d').'%');

        return $qb->getQuery()->getResult();

    }

    public function examensNRMois()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('(COUNT(ex)-COUNT(res)) as total')
            ->join('a.actes','ex')
            ->join('a.resultat','res')
            ->where('a.dateordo LIKE :datec')
            ->setParameter('datec',date('Y-m').'%');

        return $qb->getQuery()->getSingleResult();

    }

    public function examensNRMoisL()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('a')
            ->join('a.actes','ex')
            ->join('a.resultat','res')
            ->where('a.dateordo LIKE :datec')
            ->andWhere('a.resultat = :rec')
            ->setParameter('datec',date('Y-m').'%')
            ->setParameter('rec',null)
        ;

        return $qb->getQuery()->getResult();

    }

    public function examensRMois()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('COUNT(res) as total')
            ->join('a.actes','ex')
            ->join('a.resultat','res')
            ->where('a.dateordo LIKE :datec')
            ->setParameter('datec',date('Y-m').'%');

        return $qb->getQuery()->getSingleResult();

    }

    public function examensRMoisL()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('res')
            ->join('a.actes','ex')
            ->join('a.resultat','res')
            ->where('a.dateordo LIKE :datec')
            ->setParameter('datec',date('Y-m').'%');

        return $qb->getQuery()->getResult();

    }

    public function lesactesParCategories($actes, $categ)
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('COUNT(ex) as nbracte')
            ->join('a.resultats','res')
            ->join('res.acte','ex')
            ->join('a.episode','epi')
            ->join('epi.patient','pat')
            ->join('pat.convention','conv')
            ->where('ex.id = :lacte')
            ->andWhere('conv.id = :conventin')
            ->setParameter('lacte',$actes)
            ->setParameter('conventin',$categ);

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function lesNbActesDuMedecin($mdn)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('COUNT(a.resultats) as res ')
            ->where('a.medecin = :mdn')
            ->setParameter('mdn', $mdn);

        return $req->getQuery()->getSingleResult();
    }

    public function lesActesDuMedecin($mdn)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('res.designationacte as nom, COUNT(res)')
            ->join('a.actes','res')
            ->where('a.medecin = :mdn')
            //->groupBy('act.id')
            ->setParameter('mdn', $mdn);

        return $req->getQuery()->getResult();
    }


}
