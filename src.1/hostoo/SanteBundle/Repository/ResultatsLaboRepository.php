<?php

namespace hostoo\SanteBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ResultatsLaboRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ResultatsLaboRepository extends EntityRepository
{

    public function trouverResultat($ord,$acte)
    {
        $req=$this->createQueryBuilder('a');
        $req->join('a.acte','monacte')
            ->join('a.ordonnance','ordo')
            ->where('monacte.id = :acte')
            ->andWhere('ordo.id = :ord')
            ->setParameters(array('acte'=>$acte,'ord'=>$ord));
        return $req->getQuery()->getSingleResult();
    }
    public function examensDemandesMois()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('COUNT(a) as total')
            ->where('a.dateresultat LIKE :datec')
            ->setParameter('datec',date('Y-m').'%');

        return $qb->getQuery()->getSingleResult();
    }

    public function examensDemandesMoisL()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('a')
            ->where('a.dateresultat LIKE :datec')
            ->setParameter('datec',date('Y-m').'%');

        return $qb->getQuery()->getResult();
    }

    public function examensDuJour()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->where('a.dateresultat LIKE :datec')
            ->setParameter('datec',date('Y-m-d').'%');

        return $qb->getQuery()->getResult();

    }

    public function examensNRMois()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('COUNT(a) as total')
            ->where('a.dateresultat LIKE :datec')
            ->andWhere('a.attente = :att')
            ->setParameter('datec',date('Y-m').'%')
            ->setParameter('att',0);

        return $qb->getQuery()->getSingleResult();

    }

    public function examensNRMoisL()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('a')
            ->where('a.resultat = :datec')
            ->andWhere('a.attente = 0')
            ->setParameter('datec','')
        ;

        return $qb->getQuery()->getResult();

    }

    public function examensRMois()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('COUNT(a) as total')
            ->where('a.dateresultat LIKE :datec')
            ->andWhere('a.resultat <> :vide or a.attente = 1')
            ->setParameter('datec',date('Y-m').'%')
            ->setParameter('vide',null);

        return $qb->getQuery()->getSingleResult();

    }

    public function examensRMoisL()
    {
        $qb=$this->createQueryBuilder('a');
        $qb->select('a')
            ->where('a.dateresultat LIKE :datec')
            ->andWhere('a.resultat <> :vide or a.attente = 1')
            ->setParameter('datec',date('Y-m').'%')
            ->setParameter('vide',null);

        return $qb->getQuery()->getResult();

    }

    public function lesactesParCategories($actes, $categ)
    {
        $qb=$this->createQueryBuilder('res');
        $qb->select('COUNT(res) as nbracte')
            ->join('res.acte','ex')
            ->join('res.ordonnance','ordon')
            ->join('ordon.episode','epi')
            ->join('epi.patient','pat')
            ->join('pat.convention','conv')
            ->where('ex.id = :lacte')
            ->andWhere('conv.id = :conventin')
            ->setParameter('lacte',$actes)
            ->setParameter('conventin',$categ)
            ->groupBy('ex');

        return $qb->getQuery()->getOneOrNullResult();
    }

    public function lesactesParCategoriesTab()
    {
        $qb=$this->createQueryBuilder('res');
        $qb->select('COUNT(res) as nbracte')
            ->join('res.acte','ex')
            ->join('res.ordonnance','ordon')
            ->join('ordon.episode','epi')
            ->join('epi.patient','pat')
            ->join('pat.convention','conv')
            ->where('ex.id = :lacte')
            ->andWhere('conv.id = :conventin')
            ->setParameter('lacte',$actes)
            ->setParameter('conventin',$categ)
            ->groupBy('res.acte');

        return $qb->getQuery()->getResult();
    }

    public function resultatsLabo($user)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('tar.designationacte as desacte, act.prix as prix')
            ->join('a.ordonnance','ord')
            ->join('a.acte','act')
            ->join('act.actes','tar')
            ->join('ord.medecin','med')
            ->where('med.id = :user')
            ->setParameter('user',$user)
            ;
        return $req->getQuery()->getResult();
    }


    public function statistiqueParActe()
    {
        $req=$this->createQueryBuilder('a');
        $req->select('(myacte.designationacte) as nom, count(a) as nbreff')
            ->join('a.acte','acte')
            ->join('acte.actes','myacte')
            ->andWhere('a.resultat <> :ok')
            ->setParameter('ok',"")
            ->groupBy('myacte');
        return $req->getQuery()->getResult();

    }

    public function statistiqueParActeDate($date)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('(myacte.designationacte) as nom, count(a) as nbreff')
            ->join('a.acte','acte')
            ->join('acte.actes','myacte')
            ->where('a.dateresultat LIKE :ladate')
            ->andWhere('a.resultat <> :ok')
            ->setParameter('ok',"")
            ->setParameter('ladate',$date.'%')
            ->groupBy('myacte');
        return $req->getQuery()->getResult();

    }

    public function statistiqueParNEActe()
    {
        $req=$this->createQueryBuilder('a');
        $req->select('(myacte.designationacte) as nom, count(a) as nbreff')
            ->join('a.acte','acte')
            ->join('acte.actes','myacte')->where('a.resultat LIKE :ok')
            ->setParameter('ok',"")
            ->groupBy('myacte');
        return $req->getQuery()->getResult();

    }

    public function statistiqueParNEActeDate($date)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('(myacte.designationacte) as nom, count(a) as nbreff')
            ->join('a.acte','acte')
            ->join('acte.actes','myacte')
            ->where('a.attente = :ok')

            ->andWhere('a.dateresultat LIKE :ladate')
            ->setParameter('ladate',$date.'%')
            ->setParameter('ok',1)
            ->groupBy('myacte');
        return $req->getQuery()->getResult();

    }
}
