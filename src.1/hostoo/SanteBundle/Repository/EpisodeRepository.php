<?php

namespace hostoo\SanteBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EpisodeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EpisodeRepository extends EntityRepository
{
    public function trouverDate($date)
    {
        $qb=$this->createQueryBuilder('u');
        $qb->select('u')

            ->where('u.dateepisode LIKE :datee')

            ->setParameter('datee',$date.'%');
            return $qb->getQuery()->getResult();
    }

    public function frequentationPatients($date)
    {
        $qb=$this->createQueryBuilder('u');
        $qb->select('COUNT(u) As cpte, s.nom as societe')
            ->join('u.patient','p')
            ->join('p.societe','s')
            ->where('u.dateepisode LIKE :datee')
            ->groupBy('s.id')
            ->orderBy('s.id')
            ->setParameter('datee',$date.'%');
        return $qb->getQuery()->getResult();
    }

    public function frequentationDate($date)
    {
        $qb=$this->createQueryBuilder('u');
        $qb->where('u.dateepisode LIKE :datee')
            ->setParameter('datee',$date.'%');
        return $qb->getQuery()->getResult();
    }

    public function frequentationConventionnesDate($date)
    {
        $qb=$this->createQueryBuilder('u');
        $qb->select('u')
            ->join('u.patient','p')
        //->join('p.societe','s')
           // ->join('s.convention','c')
            ->where('u.dateepisode LIKE :datee')
            ->andWhere('p.societe <> :conv')
            ->setParameter('conv',15)
            ->setParameter('datee',$date.'%');
        return $qb->getQuery()->getResult();
    }

    public function frequentationPrivesDate($date)
    {
        $qb=$this->createQueryBuilder('u');
        $qb->select('u')
            ->join('u.patient','p')
            //->join('p.societe','s')
            //->join('s.convention','c')
            ->where('u.dateepisode LIKE :datee AND p.societe = :conv')
            ->setParameter('conv',15)
            ->setParameter('datee','%'.$date.'%');
        return $qb->getQuery()->getResult();
    }


    public function findArray($tab)
    {
        $qb=$this->createQueryBuilder('u');
        $qb->select('u')
            ->where('u.id IN (:tab)')
            ->setParameter('tab',$tab);
        return $qb->getQuery()->getResult();
    }

    public function patientsEnAttente($date)
    {
        $qb=$this->createQueryBuilder('u');
        $qb->select('u')
            ->where('u.dateepisode=:datee')
        ->setParameter('datee',$date);

        return $qb->getQuery()->getResult();
    }

    public function nbfrequentationAgentParMois($entreprise)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('count(a) as visites')
            ->join('a.patient','p')
            ->join('p.societe','s')
            ->where('s.id = :ent')
            ->setParameter('ent',$entreprise)
            ;
        return $req->getQuery()->getSingleResult();

    }
    public function frequentationAgentParMois($entreprise)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('count(a) as visites, YEARMONTH(a.dateepisode) as mois')
            ->join('a.patient','p')
            ->join('p.societe','s')
            ->where('s.id = :ent')
            ->setParameter('ent',$entreprise)
            ->groupBy('mois');
        return $req->getQuery()->getResult();

    }

    public function lesPerformancesDeMedecins($ladate)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('myuser.nom as mdc, COUNT(a) as epis, COUNT(leslabos) as lbs, COUNT(lesimgs) as imgs')
            ->join('a.ordonnancelabos','labo')
            ->leftJoin('labo.actes','leslabos')
            ->leftJoin('a.ordonnanceimgs','img')
            ->leftJoin('img.actes','lesimgs')
            ->leftJoin('a.utilisateur','myuser')
            ->leftJoin('a.patient','p')
            ->leftJoin('p.societe','soc')
            ->where('a.dateepisode LIKE :ladate')
            ->andWhere('soc.id = 15')
            ->setParameter('ladate',$ladate.'%')
        ->groupBy('a.utilisateur');
        return $req->getQuery()->getResult();
    }

    public function lesPerformancesDeMedecinsCV($ladate)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('myuser.nom as mdc, COUNT(a) as epis, COUNT(leslabos) as lbs, COUNT(lesimgs) as imgs')
            ->leftJoin('a.ordonnancelabos','labo')
            ->leftJoin('labo.actes','leslabos')
            ->leftJoin('a.ordonnanceimgs','img')
            ->leftJoin('img.actes','lesimgs')
            ->leftJoin('a.utilisateur','myuser')
            ->leftJoin('a.patient','p')
            ->leftJoin('p.societe','soc')
            ->where('a.dateepisode LIKE :ladate')
            ->andWhere('soc.id <> 15')
            ->setParameter('ladate',$ladate.'%')
            ->groupBy('a.utilisateur');
        return $req->getQuery()->getResult();
    }

    public  function  frequentationFiltree($conv, $date)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('a')
            ->join('a.patient','pat')
            ->join('pat.societe','soc')
            ->join('soc.convention','conv')
            ->where('conv = :cv')
            ->andWhere('a.dateepisode LIKE :dt')
            ->setParameter('cv',$conv)
            ->setParameter('dt',$date.'%')
        ;

        return $req->getQuery()->getResult();
    }

    public  function  frequentationFiltreeSoc($conv, $date)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('a')
            ->join('a.patient','pat')
            ->join('pat.societe','soc')
            ->join('soc.convention','conv')
            ->where('soc = :cv')
            ->andWhere('a.dateepisode LIKE :dt')
            ->setParameter('cv',$conv)
            ->setParameter('dt',$date.'%')
        ;

        return $req->getQuery()->getResult();
    }

    public function lesPatientsPV($societe,$mois)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('a')
            ->join('a.patient','pat')
            ->join('pat.societe','soc')
            ->where('soc.id = :socie')
            ->setParameter('socie',$societe)
            ->andWhere('a.dateepisode LIKE :date')
            ->setParameter('date',$mois.'%')
            ;

        return $req->getQuery()->getResult();
    }

    public function lesPatientsCV($societe,$mois)
    {
        $req=$this->createQueryBuilder('a');
        $req->select('a')
            ->join('a.patient','pat')
            ->join('pat.societe','soc')
            ->where('soc.id = :socie')
            ->setParameter('socie',$societe)
            ->andWhere('a.dateepisode LIKE :date')
            ->setParameter('date',$mois.'%')
        ;


        return $req->getQuery()->getResult();
    }
}
