<?php

namespace hostoo\SanteBundle\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping as ORM;

/**
 * BonConvention
 *
 * @ORM\Table(name="bon_convention")
 * @ORM\Entity(repositoryClass="hostoo\SanteBundle\Repository\BonConventionRepository")
 */
class BonConvention
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="datefacture", type="datetime")
     */
    private $datefacture;

    /**
     * @var bool
     *
     * @ORM\Column(name="urgence", type="boolean", nullable=true)
     */
    private $urgence;

    /**
     * @var bool
     *
     * @ORM\Column(name="validation", type="boolean", nullable=true)
     */
    private $validation;

    /**
     * @ORM\ManyToOne(targetEntity="hostoo\SanteBundle\Entity\Episode", inversedBy="bonconvention")
     *
     */
    private $episode;

    /**
     * @ORM\ManyToMany(targetEntity="hostoo\GestionBundle\Entity\Tarif", cascade={"persist"})
     */
    private $tarif;

    /**
     * @ORM\ManyToMany(targetEntity="hostoo\PharmacieBundle\Entity\Produit", cascade={"persist"})
     * @ORM\JoinColumn( nullable=true)
     */
    private $produits;

    /**
     * @ORM\OneToMany(targetEntity="Solde", mappedBy="facture")
     */
    private $soldes;

    public  function __construct()
    {
        $this->urgence=false;
        $this->validation=false;
        $this->datefacture=new \DateTime('now');
        $this->tarifications= new ArrayCollection;
    }


    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set datefacture
     *
     * @param \DateTime $datefacture
     * @return BonConvention
     */
    public function setDatefacture($datefacture)
    {
        $this->datefacture = $datefacture;

        return $this;
    }

    /**
     * Get datefacture
     *
     * @return \DateTime 
     */
    public function getDatefacture()
    {
        return $this->datefacture;
    }

    /**
     * Set urgence
     *
     * @param boolean $urgence
     * @return BonConvention
     */
    public function setUrgence($urgence)
    {
        $this->urgence = $urgence;

        return $this;
    }

    /**
     * Get urgence
     *
     * @return boolean 
     */
    public function getUrgence()
    {
        return $this->urgence;
    }

    /**
     * Set validation
     *
     * @param boolean $validation
     * @return BonConvention
     */
    public function setValidation($validation)
    {
        $this->validation = $validation;

        return $this;
    }

    /**
     * Get validation
     *
     * @return boolean 
     */
    public function getValidation()
    {
        return $this->validation;
    }


    /**
     * Set episode
     *
     * @param \hostoo\SanteBundle\Entity\Episode $episode
     * @return BonConvention
     */
    public function setEpisode(\hostoo\SanteBundle\Entity\Episode $episode = null)
    {
        $this->episode = $episode;

        return $this;
    }

    /**
     * Get episode
     *
     * @return \hostoo\SanteBundle\Entity\Episode 
     */
    public function getEpisode()
    {
        return $this->episode;
    }



    /**
     * Add produits
     *
     * @param \hostoo\PharmacieBundle\Entity\Produit $produits
     * @return BonConvention
     */
    public function addProduit(\hostoo\PharmacieBundle\Entity\Produit $produits)
    {
        $this->produits[] = $produits;

        return $this;
    }

    /**
     * Remove produits
     *
     * @param \hostoo\PharmacieBundle\Entity\Produit $produits
     */
    public function removeProduit(\hostoo\PharmacieBundle\Entity\Produit $produits)
    {
        $this->produits->removeElement($produits);
    }

    /**
     * Get produits
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getProduits()
    {
        return $this->produits;
    }

    /**
     * Add tarif
     *
     * @param \hostoo\GestionBundle\Entity\Tarif $tarif
     * @return BonConvention
     */
    public function addTarif(\hostoo\GestionBundle\Entity\Tarif $tarif)
    {
        $this->tarif[] = $tarif;

        return $this;
    }

    /**
     * Remove tarif
     *
     * @param \hostoo\GestionBundle\Entity\Tarif $tarif
     */
    public function removeTarif(\hostoo\GestionBundle\Entity\Tarif $tarif)
    {
        $this->tarif->removeElement($tarif);
    }

    /**
     * Get tarif
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getTarif()
    {
        return $this->tarif;
    }

    public function getActesBonConvention()
    {
        $str='<ul>';
        foreach ($this->getTarif() as $tar){
            $str.='<li>'.$tar->getActes()->getDesignationacte().'</li>';
        }
        $str.='</ul>';
        return $str;
    }
}
